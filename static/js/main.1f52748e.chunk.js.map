{"version":3,"sources":["components/DataList/DataList.js","components/Modal/Modal.js","components/DataList/DataCard.js","containers/HeroesList/actions.js","containers/HeroesList/HeroesList.js","containers/ComicsList/actions.js","containers/ComicsList/ComicsList.js","containers/App/AppRouter.js","components/Menu/Menu.js","containers/MainMenu/MainMenu.js","containers/App/App.js","reducers/index.js","reducers/heroesList.js","reducers/comicsList.js","index.js"],"names":["DataList","props","react_default","a","createElement","className","children","SimpleModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","onDisplay","setState","open","handleClose","state","classes","Button_default","onClick","buttonText","Modal_default","aria-labelledby","aria-describedby","onClose","style","top","concat","left","transform","paper","React","Component","SimpleModalWrapped","withStyles","theme","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","outline","DataCard","src","imgSrc","alt","Modal_Modal","Typography_default","variant","id","modalTitle","modalDescription","UPDATE_HEROES_LIST","HeroesList","fetch","process","then","res","json","result","onHeroesListUpdate","data","results","error","components_DataList_DataList","heroesArray","map","hero","i","DataList_DataCard","thumbnail","path","extension","name","description","key","HeroesListContainer","connect","heroesList","dispatch","heroesData","type","UPDATE_COMICS_LIST","ComicsList","onComicsListUpdate","comicsArray","comicsElem","title","ComicsListContainer","comicsList","comicsData","AppRouter","Switch","Route","exact","component","render","Redirect","to","Menu","class","MENU_ITEM_LIST","target","text","MainMenu","components_Menu_Menu","item","Link","App","containers_MainMenu_MainMenu","App_AppRouter","combineReducers","arguments","length","undefined","action","store","createStore","reducers","ReactDOM","es","BrowserRouter","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f52748e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './index.css';\n\nconst DataList = (props) => (\n  <section className=\"cards\"> \n    {props.children}\n  </section>\n);\n\nexport default DataList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nconst getModalStyle = () => {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nclass SimpleModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleOpen = () => {\n    if (this.props.onDisplay) {\n      this.props.onDisplay();\n    }\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className=\"modal\">\n        <Button onClick={this.handleOpen}>{this.props.buttonText}</Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            {this.props.children}\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  onDisplay: PropTypes.func,\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../Modal/Modal';\n\nimport './index.css';\n\nconst DataCard = (props) => (\n  <article>\n    <img className=\"hero-img\" src={props.imgSrc} alt=\" \" />\n    <Modal\n      buttonText={props.buttonText}\n    >\n      <Typography variant=\"h6\" id=\"modal-title\">\n        {props.modalTitle}\n      </Typography>\n      <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n        {props.modalDescription}\n      </Typography>\n    </Modal>\n  </article>\n);\n\nDataCard.propTypes = {\n  imgSrc: PropTypes.string.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  modalTitle: PropTypes.string.isRequired,\n  modalDescription: PropTypes.string,\n};\n\nexport default DataCard; ","/*\n * action types\n */\n\nexport const UPDATE_HEROES_LIST = 'UPDATE_HEROES_LIST'\n\n/*\n * action creators\n */\n\nexport function updateHeroesList(heroesList) {\n  return { type: UPDATE_HEROES_LIST, heroesList }\n}\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\n\nimport DataList from '../../components/DataList/DataList'\nimport DataCard from '../../components/DataList/DataCard'\n\nimport { updateHeroesList } from './actions';\n\nconst PUBLIC_MARVEL_API_KEY = process.env.REACT_APP_PUBLIC_MARVEL_API_KEY;  \n\nclass HeroesList extends React.Component {\n   componentDidMount() {\n    fetch(`https://gateway.marvel.com/v1/public/characters?apikey=${PUBLIC_MARVEL_API_KEY}&limit=40`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.props.onHeroesListUpdate(result.data.results);\n        },\n        (error) => {\n          // TODO\n        }\n      )\n  }\n\n  render() {\n    return (\n      <DataList> {\n        this.props.heroesArray.map((hero, i) => {\n          return <DataCard\n            imgSrc={hero.thumbnail.path + '.' + hero.thumbnail.extension}\n            buttonText={hero.name}\n            modalTitle={hero.name}\n            modalDescription={hero.description}\n            key={i}\n          />\n        })\n      }\n      </DataList>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    heroesArray: state.heroesList.heroesArray,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onHeroesListUpdate: heroesData => {\n      dispatch(updateHeroesList(heroesData))\n    }\n  }\n}\n\nHeroesList.propTypes = {\n  heroesArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      thumbnail: PropTypes.shape({\n        path: PropTypes.string.isRequired,\n        extension: PropTypes.string.isRequired,\n      }).isRequired,\n      description: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onHeroesListUpdate: PropTypes.func.isRequired\n}\n\nconst HeroesListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HeroesList)\n\n\nexport default HeroesListContainer\n","/*\n * action types\n */\n\nexport const UPDATE_COMICS_LIST = 'UPDATE_COMICS_LIST'\n\n/*\n * action creators\n */\n\nexport function updateComicsList(comicsList) {\n  return { type: UPDATE_COMICS_LIST, comicsList }\n}\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\n\nimport DataList from '../../components/DataList/DataList'\nimport DataCard from '../../components/DataList/DataCard'\n\nimport { updateComicsList } from './actions';\n\nconst PUBLIC_MARVEL_API_KEY = process.env.REACT_APP_PUBLIC_MARVEL_API_KEY;  \n\nclass ComicsList extends React.Component {\n   componentDidMount() {\n    fetch(`https://gateway.marvel.com/v1/public/comics?apikey=${PUBLIC_MARVEL_API_KEY}&limit=40`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.props.onComicsListUpdate(result.data.results);\n        },\n        (error) => {\n          // TODO\n        }\n      )\n  }\n\n  render() {\n    return (\n      <DataList> {\n        this.props.comicsArray.map((comicsElem, i) => {\n          return <DataCard\n            imgSrc={comicsElem.thumbnail.path + '.' + comicsElem.thumbnail.extension}\n            buttonText={comicsElem.title}\n            modalTitle={comicsElem.title}\n            modalDescription={comicsElem.description}\n            key={i}\n          />\n        })\n      }\n      </DataList>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    comicsArray: state.comicsList.comicsArray,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onComicsListUpdate: comicsData => {\n      dispatch(updateComicsList(comicsData))\n    }\n  }\n}\n\nComicsList.propTypes = {\n  comicsArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      thumbnail: PropTypes.shape({\n        path: PropTypes.string.isRequired,\n        extension: PropTypes.string.isRequired,\n      }).isRequired,\n      description: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  onComicsListUpdate: PropTypes.func.isRequired\n}\n\nconst ComicsListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ComicsList)\n\n\nexport default ComicsListContainer\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport HeroesList from '../HeroesList/HeroesList';\nimport ComicsList from '../ComicsList/ComicsList';\n\nconst AppRouter = () => (\n  <Switch>\n    <Route path=\"/heroes\" exact component={HeroesList} />\n    <Route path=\"/comics\" exact component={ComicsList} />\n    {/** Default route when no match found */}\n    <Route render={() => <Redirect to=\"/heroes\" />} /> \n  </Switch>\n);\n\nexport default AppRouter;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Menu = (props) => ( \n  <nav className={props.class}>\n    {props.children}\n  </nav>\n);\n\nMenu.propTypes = {\n  class: PropTypes.string.isRequired,\n};\n\nexport default Menu;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport Menu from '../../components/Menu/Menu'\n\nimport './menu.css';\n\nconst MENU_ITEM_LIST = [\n  {\n    target: \"/heroes\",\n    text: \"Heroes\",\n  },\n  {\n    target: \"/comics\",\n    text: \"Comics\",\n  },\n];\n\nconst MainMenu = (props) => (\n  <Menu class=\"main-menu\" >\n    {\n      MENU_ITEM_LIST.map((item, i) => {\n        return <Link\n          to={item.target}\n          className=\"menu-item\"\n          key={i}\n        >\n          {item.text}\n        </Link>\n      })\n    }\n  </Menu>\n)\n\nexport default MainMenu;","import React from 'react'\nimport AppRouter from './AppRouter'\n\nimport MainMenu from '../MainMenu/MainMenu';\n\nconst App = () => (\n  <div>\n    <MainMenu />\n    <AppRouter />\n  </div>\n)\n\nexport default App\n","import { combineReducers } from 'redux'\nimport heroesList from './heroesList'\nimport comicsList from './comicsList'\n\nexport default combineReducers({\n  heroesList,\n  comicsList,\n})\n","import {\n  UPDATE_HEROES_LIST,\n} from '../containers/HeroesList/actions'\n\nexport default function heroesList(state = {heroesArray: []}, action) {\n  switch (action.type) {\n    case UPDATE_HEROES_LIST:\n      return {heroesArray: action.heroesList}\n    default:\n      return state\n  }\n}\n","import {\n  UPDATE_COMICS_LIST,\n} from '../containers/ComicsList/actions'\n\nexport default function comicsList(state = {comicsArray: []}, action) {\n  switch (action.type) {\n    case UPDATE_COMICS_LIST:\n      return {comicsArray: action.comicsList}\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './containers/App/App';\n\nimport reducers from './reducers/index';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}